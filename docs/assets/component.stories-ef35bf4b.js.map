{"version":3,"file":"component.stories-ef35bf4b.js","sources":["../../src/components/A/checkbox/component.styles.ts","../../src/components/A/checkbox/component.ts"],"sourcesContent":["import { css } from \"lit\";\n\nexport const checkboxStyles = css`\n  :host {\n    --checkbox-size: var(--space-10);\n\n    display: inline-flex;\n    position: relative;\n  }\n\n  .checkbox {\n    --_checkbox-size: var(--checkbox-size);\n\n    outline-offset: 2px;\n\n    &:focus-within {\n      outline: 2px solid var(--color-primary);\n    }\n  }\n\n  .checkbox--label {\n    display: inline-flex;\n    align-items: center;\n    gap: var(--space-4);\n    position: relative;\n    padding-inline-start: calc(var(--_checkbox-size) * 1.5);\n    font-family: var(--ds-default-font);\n    font-size: var(--radio-label-font, var(--radio-button-size));\n    color: var(--color-black);\n    cursor: pointer;\n  }\n\n  .checkbox--icon {\n    display: none;\n    position: absolute;\n    top: 50%;\n    left: 0;\n    transform: translateY(-50%);\n    font-size: var(--_checkbox-size);\n    color: var(--color-primary);\n  }\n\n  .checkbox--label::before {\n    inset-inline-start: 0;\n    inline-size: var(--_checkbox-size);\n    block-size: var(--_checkbox-size);\n    border: 2px solid var(--color-primary);\n    border-radius: calc(var(--_checkbox-size) * 0.3);\n    background-color: var(--color-white);\n  }\n\n  .checkbox--label::before {\n    content: \"\";\n    position: absolute;\n  }\n\n  .checkbox--input:checked + .checkbox--label::before {\n    border-color: var(--color-primary);\n  }\n\n  .checkbox--input:disabled {\n    cursor: default;\n\n    & + .checkbox--label {\n      cursor: default;\n      color: var(--color-disabled);\n    }\n\n    & + .checkbox--label::before {\n      color: var(--color-disabled);\n      border-color: var(--color-disabled);\n    }\n  }\n\n  .checkbox--input:not(:disabled):hover + .checkbox--label::before {\n    background-color: var(--color-primary-container);\n    filter: brightness(var(--interaction-state-hover, 1.2));\n  }\n\n  .checkbox--input:not(:disabled):active + .checkbox--label::before {\n    background-color: var(--color-primary-container);\n    filter: brightness(var(--interaction-state-active, 1.4));\n  }\n\n  /* stylelint-disable-next-line selector-max-combinators */\n  .checkbox--input:checked + .checkbox--label > .checkbox--icon {\n    display: inline-flex;\n  }\n\n  .checkbox--input[aria-checked=\"mixed\"] + .checkbox--label > .checkbox--icon {\n    display: inline-flex;\n  }\n\n  .checkbox--input:checked:hover + .checkbox--label > .checkbox--icon {\n    color: var(--color-primary-on-container);\n  }\n\n  .checkbox--input:checked:active + .checkbox--label > .checkbox--icon {\n    color: var(--color-primary-on-container);\n  }\n`;\n","import { css } from \"lit\";\nimport { html, LitElement } from \"lit\";\nimport { customElement, query, property } from \"lit/decorators.js\";\nimport { classMap } from \"lit/directives/class-map.js\";\nimport \"../icon/component\";\nimport { checkboxStyles } from \"./component.styles\";\n\n@customElement(\"pano-a-checkbox\")\nexport class PanoACheckbox extends LitElement {\n  @query(\"input\")\n  protected _checkboxNode!: HTMLInputElement;\n\n  static styles = [\n    css`\n      *,\n      *::before,\n      *::after {\n        box-sizing: border-box;\n      }\n\n      .sr-only {\n        clip: rect(0, 0, 0, 0);\n        overflow: hidden;\n        position: absolute;\n        width: 1px;\n        height: 1px;\n        margin: -1px;\n        border-width: 0;\n        padding: 0;\n        white-space: nowrap;\n      }\n    `,\n    checkboxStyles,\n  ];\n\n  protected _handleChange() {\n    const { checked, indeterminate } = this._checkboxNode;\n    this.checked = checked;\n    this.indeterminate = indeterminate;\n  }\n\n  @property({ type: Boolean, reflect: true })\n  checked: boolean = false;\n\n  @property({ type: Boolean, reflect: true })\n  disabled: boolean = false;\n\n  @property({ type: Boolean, reflect: true, attribute: \"hidden-label\" })\n  hiddenLabel: boolean = false;\n\n  @property({ type: Boolean, reflect: true })\n  indeterminate: boolean = false;\n\n  @property({ type: String, reflect: true })\n  label!: string;\n\n  @property({ type: String, reflect: true })\n  name!: string;\n\n  @property({ type: String, reflect: true })\n  value!: string;\n\n  render() {\n    const {\n      checked,\n      disabled,\n      hiddenLabel,\n      indeterminate,\n      label,\n      name,\n      value,\n      _handleChange: handleChange,\n    } = this;\n\n    const labelClasses = classMap({\n      [`checkbox--label`]: true,\n      [`sr-only`]: hiddenLabel,\n    });\n\n    return html`\n      <div class=\"checkbox\">\n        <input\n          id=\"checkbox\"\n          class=\"checkbox--input | sr-only\"\n          .disabled=\"${disabled}\"\n          .checked=\"${checked}\"\n          aria-checked=\"${indeterminate ? \"mixed\" : checked}\"\n          name=\"${name}\"\n          value=\"${value}\"\n          type=\"checkbox\"\n          @change=\"${handleChange}\"\n        />\n        <label class=\"${labelClasses}\" for=\"checkbox\">\n          <pano-a-icon\n            class=\"checkbox--icon\"\n            icon-name=\"${indeterminate ? \"remove\" : \"check\"}\"\n          ></pano-a-icon>\n          <div>${label}</div>\n        </label>\n      </div>\n    `;\n  }\n}\n"],"names":["checkboxStyles","css","PanoACheckbox","LitElement","checked","indeterminate","disabled","hiddenLabel","label","name","value","handleChange","labelClasses","classMap","html","__decorateClass","query","property","customElement"],"mappings":"kOAEO,MAAMA,EAAikMCMjB,IAAAC,EAAN,cAA4BC,CAAW,CAAvC,aAAA,CAAA,MAAA,GAAA,SAAA,EAkCc,KAAA,QAAA,GAGC,KAAA,SAAA,GAGG,KAAA,YAAA,GAGE,KAAA,cAAA,EAAA,CAhBf,eAAgB,CACxB,KAAM,CAAE,QAAAC,EAAS,cAAAC,GAAkB,KAAK,cACxC,KAAK,QAAUD,EACf,KAAK,cAAgBC,CACvB,CAuBA,QAAS,CACD,KAAA,CACJ,QAAAD,EACA,SAAAE,EACA,YAAAC,EACA,cAAAF,EACA,MAAAG,EACA,KAAAC,EACA,MAAAC,EACA,cAAeC,CACb,EAAA,KAEEC,EAAeC,EAAS,CAC3B,kBAAoB,GACpB,UAAYN,CAAA,CACd,EAEM,OAAAO;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,uBAKYR,CAAQ;AAAA,sBACTF,CAAO;AAAA,0BACHC,EAAgB,QAAUD,CAAO;AAAA,kBACzCK,CAAI;AAAA,mBACHC,CAAK;AAAA;AAAA,qBAEHC,CAAY;AAAA;AAAA,wBAETC,CAAY;AAAA;AAAA;AAAA,yBAGXP,EAAgB,SAAW,OAAO;AAAA;AAAA,iBAE1CG,CAAK;AAAA;AAAA;AAAA,KAIpB,CACF,EA9FaN,EAIJ,OAAS,CACdD;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,MAmBAD,CACF,EAvBUe,EAAA,CADTC,EAAM,OAAO,CAAA,EADHd,EAED,UAAA,gBAAA,CAAA,EAgCVa,EAAA,CADCE,EAAS,CAAE,KAAM,QAAS,QAAS,GAAM,CAAA,EAjC/Bf,EAkCX,UAAA,UAAA,CAAA,EAGAa,EAAA,CADCE,EAAS,CAAE,KAAM,QAAS,QAAS,GAAM,CAAA,EApC/Bf,EAqCX,UAAA,WAAA,CAAA,EAGAa,EAAA,CADCE,EAAS,CAAE,KAAM,QAAS,QAAS,GAAM,UAAW,eAAgB,CAAA,EAvC1Df,EAwCX,UAAA,cAAA,CAAA,EAGAa,EAAA,CADCE,EAAS,CAAE,KAAM,QAAS,QAAS,GAAM,CAAA,EA1C/Bf,EA2CX,UAAA,gBAAA,CAAA,EAGAa,EAAA,CADCE,EAAS,CAAE,KAAM,OAAQ,QAAS,GAAM,CAAA,EA7C9Bf,EA8CX,UAAA,QAAA,CAAA,EAGAa,EAAA,CADCE,EAAS,CAAE,KAAM,OAAQ,QAAS,GAAM,CAAA,EAhD9Bf,EAiDX,UAAA,OAAA,CAAA,EAGAa,EAAA,CADCE,EAAS,CAAE,KAAM,OAAQ,QAAS,GAAM,CAAA,EAnD9Bf,EAoDX,UAAA,QAAA,CAAA,EApDWA,EAANa,EAAA,CADNG,EAAc,iBAAiB,CAAA,EACnBhB,CAAA;;;;;;;;;;"}