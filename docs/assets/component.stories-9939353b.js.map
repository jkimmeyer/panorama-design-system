{"version":3,"file":"component.stories-9939353b.js","sources":["../../src/components/checkbox/component.styles.ts","../../src/components/checkbox/component.ts"],"sourcesContent":["import { css } from \"lit\";\n\nexport const checkboxStyles = css`\n  :host {\n    position: relative;\n  }\n\n  .checkbox--label {\n    display: inline-flex;\n    align-items: center;\n    position: relative;\n    padding-inline-start: calc(var(--space-medium) * 2);\n    color: var(--color-primary-700);\n    gap: var(--space-small);\n    cursor: pointer;\n  }\n\n  .checkbox--icon {\n    position: absolute;\n    left: 0;\n    top: 50%;\n    transform: translateY(-50%);\n    display: none;\n  }\n\n  .checkbox--label::before,\n  .checkbox--label::after {\n    content: \"\";\n    position: absolute;\n    z-index: var(--zLayer-default, 1);\n  }\n\n  .checkbox--label::before {\n    inset-inline-start: 0;\n    inline-size: 20px;\n    block-size: 20px;\n    border: 2px solid var(--color-primary);\n    border-radius: var(--space-small);\n    background-color: var(--color-white);\n  }\n\n  .checkbox--input:checked + .checkbox--label::before {\n    border-color: var(--color-primary);\n  }\n\n  .checkbox--input:focus + .checkbox--label::before,\n  .checkbox--input:hover + .checkbox--label::before {\n    border-color: var(--color-secondary);\n  }\n\n  .checkbox--input:checked + .checkbox--label > .checkbox--icon {\n    display: inline-flex;\n  }\n`;\n","import { css } from \"lit\";\nimport { html, LitElement } from \"lit\";\nimport { customElement, query, property } from \"lit/decorators.js\";\nimport { classMap } from \"lit/directives/class-map.js\";\nimport \"../material-icon/component\";\nimport { checkboxStyles } from \"./component.styles\";\n\n@customElement(\"pano-checkbox\")\nexport class PanoCheckbox extends LitElement {\n  @query(\"input\")\n  protected _checkboxNode!: HTMLInputElement;\n\n  static styles = [\n    css`\n      *,\n      *::before,\n      *::after {\n        box-sizing: border-box;\n      }\n\n      .sr-only {\n        clip: rect(0, 0, 0, 0);\n        overflow: hidden;\n        position: absolute;\n        width: 1px;\n        height: 1px;\n        margin: -1px;\n        border-width: 0;\n        padding: 0;\n        white-space: nowrap;\n      }\n    `,\n    checkboxStyles,\n  ];\n\n  protected _handleChange() {\n    const { checked, indeterminate } = this._checkboxNode;\n    this.checked = checked;\n    this.indeterminate = indeterminate;\n  }\n\n  @property({ type: Boolean, reflect: true })\n  checked: boolean = false;\n\n  @property({ type: Boolean, reflect: true })\n  disabled: boolean = false;\n\n  @property({ type: Boolean, reflect: true, attribute: \"hidden-label\" })\n  hiddenLabel: boolean = false;\n\n  @property({ type: Boolean, reflect: true })\n  indeterminate: boolean = false;\n\n  @property({ type: String, reflect: true })\n  label!: string;\n\n  @property({ type: String, reflect: true })\n  name!: string;\n\n  @property({ type: String, reflect: true })\n  value!: string;\n\n  render() {\n    const {\n      checked,\n      disabled,\n      hiddenLabel,\n      indeterminate,\n      label,\n      name,\n      value,\n      _handleChange: handleChange,\n    } = this;\n\n    const labelClasses = classMap({\n      [`checkbox--label`]: true,\n      [`sr-only`]: hiddenLabel,\n    });\n\n    return html`\n      <input\n        id=\"checkbox\"\n        class=\"checkbox--input | sr-only\"\n        .disabled=\"${disabled}\"\n        .checked=\"${checked}\"\n        aria-checked=\"${indeterminate ? \"mixed\" : checked}\"\n        name=\"${name}\"\n        value=\"${value}\"\n        type=\"checkbox\"\n        @change=\"${handleChange}\"\n      />\n      <label class=\"${labelClasses}\" for=\"checkbox\">\n        <material-icon class=\"checkbox--icon\" icon-name=\"check\"></material-icon>\n        <div>${label}</div>\n      </label>\n    `;\n  }\n}\n"],"names":["checkboxStyles","css","PanoCheckbox","LitElement","checked","indeterminate","disabled","hiddenLabel","label","name","value","handleChange","labelClasses","classMap","html","__decorateClass","query","property","customElement"],"mappings":"mMAEO,MAAMA,EAAiBC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,kMCMjB,IAAAC,EAAN,cAA2BC,CAAW,CAAtC,aAAA,CAAA,MAAA,GAAA,SAAA,EAkCc,KAAA,QAAA,GAGC,KAAA,SAAA,GAGG,KAAA,YAAA,GAGE,KAAA,cAAA,EAAA,CAhBf,eAAgB,CACxB,KAAM,CAAE,QAAAC,EAAS,cAAAC,GAAkB,KAAK,cACxC,KAAK,QAAUD,EACf,KAAK,cAAgBC,CACvB,CAuBA,QAAS,CACD,KAAA,CACJ,QAAAD,EACA,SAAAE,EACA,YAAAC,EACA,cAAAF,EACA,MAAAG,EACA,KAAAC,EACA,MAAAC,EACA,cAAeC,CACb,EAAA,KAEEC,EAAeC,EAAS,CAC3B,kBAAoB,GACpB,UAAYN,CAAA,CACd,EAEM,OAAAO;AAAAA;AAAAA;AAAAA;AAAAA,qBAIUR,CAAQ;AAAA,oBACTF,CAAO;AAAA,wBACHC,EAAgB,QAAUD,CAAO;AAAA,gBACzCK,CAAI;AAAA,iBACHC,CAAK;AAAA;AAAA,mBAEHC,CAAY;AAAA;AAAA,sBAETC,CAAY;AAAA;AAAA,eAEnBJ,CAAK;AAAA;AAAA,KAGlB,CACF,EAzFaN,EAIJ,OAAS,CACdD;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,MAmBAD,CACF,EAvBUe,EAAA,CADTC,EAAM,OAAO,CAAA,EADHd,EAED,UAAA,gBAAA,CAAA,EAgCVa,EAAA,CADCE,EAAS,CAAE,KAAM,QAAS,QAAS,GAAM,CAAA,EAjC/Bf,EAkCX,UAAA,UAAA,CAAA,EAGAa,EAAA,CADCE,EAAS,CAAE,KAAM,QAAS,QAAS,GAAM,CAAA,EApC/Bf,EAqCX,UAAA,WAAA,CAAA,EAGAa,EAAA,CADCE,EAAS,CAAE,KAAM,QAAS,QAAS,GAAM,UAAW,eAAgB,CAAA,EAvC1Df,EAwCX,UAAA,cAAA,CAAA,EAGAa,EAAA,CADCE,EAAS,CAAE,KAAM,QAAS,QAAS,GAAM,CAAA,EA1C/Bf,EA2CX,UAAA,gBAAA,CAAA,EAGAa,EAAA,CADCE,EAAS,CAAE,KAAM,OAAQ,QAAS,GAAM,CAAA,EA7C9Bf,EA8CX,UAAA,QAAA,CAAA,EAGAa,EAAA,CADCE,EAAS,CAAE,KAAM,OAAQ,QAAS,GAAM,CAAA,EAhD9Bf,EAiDX,UAAA,OAAA,CAAA,EAGAa,EAAA,CADCE,EAAS,CAAE,KAAM,OAAQ,QAAS,GAAM,CAAA,EAnD9Bf,EAoDX,UAAA,QAAA,CAAA,EApDWA,EAANa,EAAA,CADNG,EAAc,eAAe,CAAA,EACjBhB,CAAA;;;;;;;;;;"}